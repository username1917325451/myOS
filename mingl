sudo apt-get install
普通模式下 ggVG全选   --   d剪切   dG删除   y复制  p粘贴
//

./configure --prefix=/home/shenhaomin/work/bochs --enable-debugger --enable-disasm --enable-iodebug --enable-x86-debugger --with-x --with-x11 LDFLAGS='-pthread'
./configure --prefix=/home/shenhaomin/work/bochs-gdb --enable-gdb-stub --enable-disasm --enable-iodebug --enable-x86-debugger --with-x --with-x11 LDFLAGS='-pthread'

//

touch bochsrc.disk

//

megs : 32

romimage: file=/home/shenhaomin/work/bochs/share/bochs/BIOS-bochs-latest
vgaromimage: file=/home/shenhaomin/work/bochs/share/bochs/VGABIOS-lgpl-latest

boot: disk

log: bochs.out

mouse:enabled=0
keyboard:keymap=/home/shenhaomin/work/bochs/share/bochs/keymaps/x11-pc-us.map

ata0:enabled=1,ioaddr1=0x1f0,ioaddr2=0x3f0,irq=14
ata0-master: type=disk, path="hd60M.img", mode=flat,cylinders=121,heads=16,spt=63

#gdbstub:enabled=1,port=1234,text_base=0,data_base=0,bss_base=0


//

启动磁盘（在bochs目录下）
bin/bximage

//

注意要在myos目录下
编译并写入mbr
nasm -o build/mbr -I ./boot/include/ boot/mbr.S 
dd if=build/mbr of=/home/shenhaomin/work/bochs/hd60M.img bs=512 count=1 conv=notrunc

编译并写入loader
nasm -o build/loader -I ./boot/include/ ./boot/loader.S 
dd if=build/loader of=/home/shenhaomin/work/bochs/hd60M.img bs=512 count=4 conv=notrunc seek=2

编译mian
gcc-4.4 -I lib/kernel/ -I lib/ -I kernel/ -c -fno-builtin -o build/main.o -m32 kernel/main.c

编译pirnt
nasm -f elf -o build/print.o lib/kernel/print.S

编译kernel
nasm -f elf -o build/kernel.o kernel/kernel.S

编译interrupt
gcc-4.4 -I lib/kernel/ -I lib/ -I kernel/ -c -fno-builtin -o build/interrput.o -m32 kernel/interrupt.c

编译init
gcc-4.4 -m32 -I lib/kernel/ -I lib/ -I kernel/ -c -fno-builtin -o build/init.o kernel/init.c

链接成内核
ld -m elf_i386 -Ttext 0x00001500 -e main -o build/kernel.bin  build/main.o build/kernel.o build/init.o build/interrput.o build/print.o

写入内核
dd if=build/kernel.bin of=/home/shenhaomin/work/bochs/hd60M.img bs=512 count=200 seek=9 conv=notrunc

清除build文件夹内所有的编译好的二进制文件
rm -rf build/*

//

启动虚拟机
bin/bochs -f bochsrc.disk

//